services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: rasa_postgres
    environment:
      POSTGRES_DB: rasa_chatbot
      POSTGRES_USER: rasa_user
      POSTGRES_PASSWORD: rasa_password_2024
      POSTGRES_HOST_AUTH_METHOD: md5
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    networks:
      - rasa_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rasa_user -d rasa_chatbot"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Servidor de acciones de Rasa
  rasa-action-server:
    build:
      context: .
      dockerfile: Dockerfile.actions
    container_name: rasa_action_server
    environment:
      - DATABASE_URL=postgresql://rasa_user:rasa_password_2024@postgres:5432/rasa_chatbot
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=rasa_chatbot
      - DB_USER=rasa_user
      - DB_PASSWORD=rasa_password_2024
    ports:
      - "5055:5055"
    networks:
      - rasa_network
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./actions:/app/actions
    restart: unless-stopped

  # Servidor principal de Rasa
  rasa-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rasa_server
    environment:
      - DATABASE_URL=postgresql://rasa_user:rasa_password_2024@postgres:5432/rasa_chatbot
    ports:
      - "5005:5005"
    networks:
      - rasa_network
    depends_on:
      postgres:
        condition: service_healthy
      rasa-action-server:
        condition: service_started
    volumes:
      - ./models:/app/models
      - ./data:/app/data
      - ./domain.yml:/app/domain.yml
      - ./config.yml:/app/config.yml
      - ./endpoints.yml:/app/endpoints.yml
      - ./credentials.yml:/app/credentials.yml
    restart: unless-stopped
    command: ["run", "--enable-api", "--cors", "*", "--endpoints", "endpoints.yml", "--debug"]

  # Portainer - Administración gráfica de contenedores Docker
  portainer:
    image: portainer/portainer-ce:2.19.4
    container_name: rasa_portainer
    command: -H unix:///var/run/docker.sock
    restart: unless-stopped
    ports:
      - "9000:9000"    # Puerto HTTP
      - "9443:9443"    # Puerto HTTPS (recomendado)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer_data:/data
    networks:
      - rasa_network
    environment:
      # Permitir acceso HTTP (opcional, HTTPS es más seguro)
      - PORTAINER_HTTP_DISABLED=false

volumes:
  postgres_data:
    driver: local
    labels:
      - "project=rasa-chatbot"
  
  # Volumen para persistir datos de Portainer
  portainer_data:
    driver: local
    labels:
      - "project=rasa-chatbot"

networks:
  rasa_network:
    driver: bridge
    labels:
      - "project=rasa-chatbot"